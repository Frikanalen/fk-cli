#!/usr/bin/env python3

from tqdm import tqdm
from tusclient import client
import requests
import os
import time

UPLOAD_CHUNK_SIZE = 1024 * 1024
FK_API = 'http://localhost:8000'
MEDIA_API = 'http://localhost:8001'
FK_API_KEY = '1234'

SESSION_COOKIE = 'fk:session'
CSRF_COOKIE = 'fk:csrf'


def open_session(email, password):
    session_req = requests.post(
        f'{FK_API}/auth/login',
        {'email': email, 'password': password}
    )

    return (session_req.cookies[SESSION_COOKIE], session_req.cookies[CSRF_COOKIE])


def get_frikanalen_tus_client():
    def _encode_cookies(cookies: dict) -> str:
        return '; '.join(['='.join(cookie) for cookie in cookies.items()])

    tus_cookies = _encode_cookies({
        SESSION_COOKIE: session,
        CSRF_COOKIE: csrf
    })

    tus_headers = {
        'Cookie': tus_cookies,
        'X-CSRF-Token': csrf,
    }

    return client.TusClient(f'{MEDIA_API}/upload/video/', tus_headers)


def get_frikanalen_tus_uploader(file_path: str):
    file_name = os.path.basename(file_path)
    file_stream = open(file_path, 'rb')
    tus_client = get_frikanalen_tus_client()
    return tus_client.uploader(file_stream=file_stream,
                               chunk_size=UPLOAD_CHUNK_SIZE,
                               metadata={'fileName': file_name})


def upload_file(file_path: str):
    tus_uploader = get_frikanalen_tus_uploader(file_path)
    file_size = os.stat(file_path).st_size
    progress_bar = tqdm(total=file_size, unit_scale=True, unit='B')

    while tus_uploader.offset < file_size:
        tus_uploader.upload_chunk()
        progress_bar.update(UPLOAD_CHUNK_SIZE)

    progress_bar.close()


if __name__ == '__main__':
    session, csrf = open_session('dev-admin@frikanalen.no', 'dev-admin')
    upload_file('test.mp4')
